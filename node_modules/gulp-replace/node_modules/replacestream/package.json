{
  "name": "replacestream",
  "version": "0.1.3",
  "description": "A node.js through stream that does basic streaming text search and replace and is chunk boundary friendly",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/eugeneware/replacestream"
  },
  "keywords": [
    "replace",
    "text",
    "regex",
    "stream",
    "streams",
    "streaming",
    "search"
  ],
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com"
  },
  "license": "BSD",
  "devDependencies": {
    "chai": "~1.6.1",
    "mocha": "~1.11.0"
  },
  "dependencies": {
    "through": "~2.3.4"
  },
  "readme": "# replacestream\n\nA node.js through stream that does basic streaming text search and replace and\nis chunk boundary friendly.\n\n[![build status](https://secure.travis-ci.org/eugeneware/replacestream.png)](http://travis-ci.org/eugeneware/replacestream)\n\n## Installation\n\nInstall via npm:\n\n``` shell\n$ npm install replacestream\n```\n\n## Examples\n\n### Search and replace over a test file\n\nSay we want to do a search and replace over the following file:\n\n```\n// happybirthday.txt\nHappy birthday to you!\nHappy birthday to you!\nHappy birthday to dear Liza!\nHappy birthday to you!\n```\n\n``` js\nvar replaceStream = require('replacestream')\n  , fs = require('fs')\n  , path = require('path');\n\n// Replace all the instances of 'birthday' with 'earthday'\nfs.createReadStream(path.join(__dirname, 'happybirthday.txt'))\n  .pipe(replaceStream('birthday', 'earthday'))\n  .pipe(process.stdout);\n```\n\nRunning this will print out:\n\n``` bash\n$ node simple.js\nHappy earthday to you!\nHappy earthday to you!\nHappy earthday to dear Liza!\nHappy earthday to you!\n```\n\nYou can also limit the number of replaces to first ```n```:\n\n``` js\n// Replace the first 2 of the instances of 'birthday' with 'earthday'\nfs.createReadStream(path.join(__dirname, 'happybirthday.txt'))\n  .pipe(replaceStream('birthday', 'earthday', { limit: 2 } ))\n  .pipe(process.stdout);\n```\n\nWhich would output:\n\n``` bash\n$ node simple.js\nHappy earthday to you!\nHappy earthday to you!\nHappy birthday to dear Liza!\nHappy birthday to you!\n```\n\nAnd you can also pass in a replacement function which will get called for each\nreplacement:\n\n``` js\n// Replace the word 'Happy' with a different word each time\nvar words = ['Awesome', 'Good', 'Super', 'Joyous'];\nfunction replaceFn(match) {\n  return words.shift();\n}\nfs.createReadStream(path.join(__dirname, 'happybirthday.txt'))\n  .pipe(replaceStream('birthday', replaceFn))\n  .pipe(process.stdout);\n```\n\nWhich would output:\n\n``` bash\n$ node simple.js\nAwesome birthday to you!\nGood birthday to you!\nSuper birthday to dear Liza!\nJoyous birthday to you!\n```\n\n### Web server search and replace over a test file\n\nHere's the same example, but kicked off from a HTTP server:\n\n``` js\n// server.js\nvar http = require('http')\n  , fs = require('fs')\n  , path = require('path')\n  , replaceStream = require('replacestream');\n\nvar app = function (req, res) {\n  if (req.url.match(/^\\/happybirthday\\.txt$/)) {\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\n    fs.createReadStream(path.join(__dirname, 'happybirthday.txt'))\n      .pipe(replaceStream('birthday', 'earthday'))\n      .pipe(res);\n  } else {\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\n    res.end('File not found');\n  }\n};\nvar server = http.createServer(app).listen(3000);\n```\n\nWhen you request the file:\n```\n$ curl -i \"http://localhost:3000/happybirthday.txt\"\nHTTP/1.1 200 OK\nContent-Type: text/plain\nDate: Mon, 08 Jul 2013 06:45:21 GMT\nConnection: keep-alive\nTransfer-Encoding: chunked\n\nHappy earthday to you!\nHappy earthday to you!\nHappy earthday to dear Liza!\nHappy earthday to you!\n```\n\nNB: If your readable Stream that you're piping through the `replacestream` is\npaused, then you may have to call the `.resume()` method on it.\n\n### Changing the encoding\n\nYou can also change the text encoding of the search and replace by setting an\nencoding property on the options object:\n\n``` js\n// Replace the first 2 of the instances of 'birthday' with 'earthday'\nfs.createReadStream(path.join(__dirname, 'happybirthday.txt'))\n  .pipe(replaceStream('birthday', 'earthday', { limit: 2, encoding: 'ascii' } ))\n  .pipe(process.stdout);\n```\n\nBy default the encoding will be set to 'utf8'.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/eugeneware/replacestream/issues"
  },
  "homepage": "https://github.com/eugeneware/replacestream",
  "_id": "replacestream@0.1.3",
  "_shasum": "e018d3a37724600ccd0c005990d8a21b7b54ff34",
  "_from": "replacestream@0.1.3",
  "_resolved": "https://registry.npmjs.org/replacestream/-/replacestream-0.1.3.tgz"
}
